{"version":3,"sources":["components/Searchbar/Searchbar.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","services/api.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/Main/Main.jsx","App.js","index.js"],"names":["module","exports","page","perPage","query","url","axios","get","then","response","status","data","hits","length","Searchbar","state","onChangeQuery","e","setState","target","value","onSubmitForm","trim","preventDefault","props","onSetQuery","className","s","container","form","onSubmit","this","type","button","icon","style","width","height","fill","input","name","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","largeImageURL","tags","myRef","onClickImg","imageItem","ref","onClick","src","image","alt","ImageGallery","itemsImg","imageGallery","map","el","idx","arr","id","Button","onClickMore","blockMore","override","css","Loader","color","loading","size","root","document","querySelector","Modal","onCloseKey","code","onCloseModal","window","addEventListener","removeEventListener","item","createPortal","overlay","currentTarget","modal","Main","itemLooking","searchQuery","isLoading","isLastPage","React","createRef","currentPage","totalPage","clearData","scrollToRef","top","current","offsetTop","scrollTo","behavior","loadItemImg","setSearchQuery","setItemLooking","dataset","clearItemLooking","prevProps","prevState","newSearch","API","toast","warn","Math","trunc","totalHits","catch","error","message","App","theme","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fda6be05.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Searchbar_container__tlgXc\",\"form\":\"Searchbar_form__2Hvpv\",\"input\":\"Searchbar_input__383OY\",\"button\":\"Searchbar_button__24cC0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageItem\":\"ImageGalleryItem_imageItem__aTTrh\",\"image\":\"ImageGalleryItem_image__19g9f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2SDJo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__299oz\",\"modal\":\"Modal_modal__31Uzu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__2fMDG\"};","import axios from \"axios\";\n\nconst BASE_URL = \"https://pixabay.com/api/\";\nconst API_KEY = \"23908386-2e3165467d660ea2c64c020be\";\n\nconst getSearchImages = (page, perPage, query) => {\n  const url = `${BASE_URL}?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=${perPage}&key=${API_KEY}`;\n  return axios.get(url).then((response) => {\n    if (response.status === 200 && response.data.hits.length !== 0) {\n      return response.data;\n    } else {\n      return null;\n    }\n  });\n};\n\nexport default { getSearchImages };\n","import { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ImageSearchIcon from '@mui/icons-material/ImageSearch'\nimport s from './Searchbar.module.css'\n\nexport default class Searchbar extends Component {\n  static propTypes = {\n    onSetQuery: PropTypes.func.isRequired,\n  }\n\n  state = { query: '' }\n\n  onChangeQuery = (e) => {\n    this.setState({ query: e.target.value })\n  }\n\n  onSubmitForm = (e) => {\n    const query = this.state.query.trim()\n    e.preventDefault()\n    this.props.onSetQuery(query)\n  }\n\n  render() {\n    return (\n      <header className={s.container}>\n        <form className={s.form} onSubmit={this.onSubmitForm}>\n          <button type=\"submit\" className={s.button}>\n            <ImageSearchIcon\n              className={s.icon}\n              style={{ width: '90%', height: '90%', fill: 'blue' }}\n            />\n          </button>\n\n          <input\n            className={s.input}\n            value={this.state.query}\n            type=\"text\"\n            name=\"search\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.onChangeQuery}\n          />\n        </form>\n      </header>\n    )\n  }\n}\n","import PropTypes from 'prop-types'\nimport s from './ImageGalleryItem.module.css'\n\nfunction ImageGalleryItem({\n  webformatURL,\n  largeImageURL,\n  tags,\n  myRef = null,\n  onClickImg,\n}) {\n  return (\n    <li\n      className={s.imageItem}\n      ref={myRef}\n      onClick={(e) => {\n        onClickImg(e.target)\n      }}\n    >\n      <img\n        src={webformatURL}\n        data-src={largeImageURL}\n        className={s.image}\n        alt={tags}\n      />\n    </li>\n  )\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  onClickImg: PropTypes.func.isRequired,\n  myRef: PropTypes.object,\n}\n\nexport default ImageGalleryItem\n","import PropTypes from 'prop-types'\nimport s from './ImageGallery.module.css'\nimport ImageGalleryItem from '../ImageGalleryItem'\n\nexport default function ImageGallery({ itemsImg, myRef, onClickImg }) {\n  return (\n    <ul className={s.imageGallery}>\n      {itemsImg &&\n        itemsImg.map((el, idx, arr) => (\n          <ImageGalleryItem\n            key={el.id}\n            webformatURL={el.webformatURL}\n            largeImageURL={el.largeImageURL}\n            tags={el.tags}\n            myRef={idx === arr.length - 12 ? myRef : null}\n            onClickImg={onClickImg}\n          />\n        ))}\n    </ul>\n  )\n}\n\nImageGallery.propTypes = {\n  itemsImg: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }),\n  ),\n  myRef: PropTypes.object,\n  onClickImg: PropTypes.func.isRequired,\n}\n","import PropTypes from 'prop-types'\nimport s from './Button.module.css'\n\nfunction Button({ onClickMore }) {\n  return (\n    <div className={s.blockMore}>\n      <button type=\"button\" className={s.button} onClick={onClickMore}>\n        Load more...\n      </button>\n    </div>\n  )\n}\n\nButton.propTypes = {\n  onClickMore: PropTypes.func.isRequired,\n}\n\nexport default Button\n","import { css } from '@emotion/react'\nimport CircleLoader from 'react-spinners/CircleLoader'\n\nconst override = css`\n  display: block;\n  margin: 10px auto;\n`\n\nconst loading = true\n\nfunction Loader() {\n  return (\n    <CircleLoader\n      color=\"rgb(5, 255, 247)\"\n      loading={loading}\n      css={override}\n      size={50}\n    />\n  )\n}\n\nexport default Loader\n","import { Component } from 'react'\nimport { createPortal } from 'react-dom'\nimport PropTypes from 'prop-types'\nimport s from './Modal.module.css'\n\nconst root = document.querySelector('#root-modal')\n\nexport default class Modal extends Component {\n  propTypes = {\n    item: PropTypes.shape({\n      src: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }),\n    onCloseModal: PropTypes.func.isRequired,\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.onCloseKey)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onCloseKey)\n  }\n\n  onCloseKey = (e) => {\n    if (e.code === 'Escape') {\n      this.props.onCloseModal()\n    }\n  }\n\n  render() {\n    const {\n      onCloseModal,\n      item: { src, tags },\n    } = this.props\n    return createPortal(\n      <div\n        className={s.overlay}\n        onClick={(e) => {\n          if (e.target === e.currentTarget) {\n            onCloseModal()\n          }\n        }}\n      >\n        <div className={s.modal}>\n          <img src={src} alt={tags} />\n        </div>\n      </div>,\n      root,\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { toast } from 'react-toastify'\nimport API from '../../services/api'\nimport Searchbar from '../Searchbar'\nimport ImageGallery from '../ImageGallery'\nimport Button from '../Button'\nimport Loader from '../Loader'\nimport Modal from '../Modal'\n\nclass Main extends Component {\n  state = {\n    itemLooking: null,\n    searchQuery: '',\n    isLoading: false,\n    isLastPage: false,\n    itemsImg: [],\n    myRef: React.createRef(),\n    currentPage: 1,\n    perPage: 12,\n    totalPage: 0,\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { perPage, currentPage, myRef, searchQuery, isLoading } = this.state\n    let newSearch = false\n    if (searchQuery !== prevState.searchQuery) {\n      newSearch = true\n    }\n    if (isLoading !== prevProps.isLoading && isLoading) {\n      API.getSearchImages(currentPage, perPage, searchQuery)\n        .then((data) => {\n          if (!data) {\n            this.clearData()\n            toast.warn('No such results!')\n            return\n          }\n\n          this.setState((prevState) => ({\n            itemsImg: newSearch\n              ? [\n                  ...data.hits.map((el) => ({\n                    id: el.id,\n                    webformatURL: el.webformatURL,\n                    largeImageURL: el.largeImageURL,\n                    tags: el.tags,\n                  })),\n                ]\n              : [\n                  ...prevState.itemsImg,\n                  ...data.hits.map((el) => ({\n                    id: el.id,\n                    webformatURL: el.webformatURL,\n                    largeImageURL: el.largeImageURL,\n                    tags: el.tags,\n                  })),\n                ],\n            totalPage: Math.trunc(data.totalHits / prevState.perPage) + 1,\n            currentPage: prevState.currentPage + 1,\n            isLastPage:\n              prevState.currentPage + 1 >=\n              Math.trunc(data.totalHits / prevState.perPage) + 1\n                ? true\n                : false,\n            isLoading: false,\n          }))\n\n          if (myRef.current) {\n            this.scrollToRef(myRef)\n          }\n        })\n        .catch((error) => {\n          this.clearData()\n          toast.error(error.message)\n        })\n    }\n  }\n\n  clearData = () => {\n    this.setState({\n      itemsImg: [],\n      totalPage: 0,\n      currentPage: 1,\n      isLastPage: true,\n      isLoading: false,\n    })\n  }\n\n  scrollToRef = (ref) => {\n    const top = ref.current.offsetTop - 80\n    window.scrollTo({ top, behavior: 'smooth' })\n  }\n\n  loadItemImg = () => {\n    this.setState({ isLoading: true })\n  }\n\n  setSearchQuery = (value) => {\n    this.setState({\n      itemsImg: [],\n      searchQuery: value,\n      isLoading: value ? true : false,\n      currentPage: 1,\n    })\n  }\n\n  setItemLooking = (el) => {\n    this.setState({ itemLooking: { src: el.dataset.src, tags: el.alt } })\n  }\n\n  clearItemLooking = () => {\n    this.setState({ itemLooking: null })\n  }\n\n  render() {\n    const {\n      itemsImg,\n      isLoading,\n      itemLooking,\n      isLastPage,\n      searchQuery,\n      myRef,\n    } = this.state\n\n    return (\n      <>\n        <Searchbar onSetQuery={this.setSearchQuery} />\n        <ImageGallery\n          itemsImg={itemsImg}\n          myRef={myRef}\n          onClickImg={this.setItemLooking}\n        />\n        {isLoading && <Loader />}\n        {searchQuery && !isLastPage && !isLoading && (\n          <Button onClickMore={this.loadItemImg} />\n        )}\n        {itemLooking && (\n          <Modal item={itemLooking} onCloseModal={this.clearItemLooking} />\n        )}\n      </>\n    )\n  }\n}\n\nexport default Main\n","import { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n      <ToastContainer theme=\"dark\" />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}